-- Pet Detector ESP with AutoHop + Status GUI

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Pet Detector",
    SubTitle = "SkillyBetaHub Script",
    TabWidth = 160,
    Size = UDim2.fromOffset(500, 300),
    Acrylic = false,
    Theme = "VSC Dark High Contrast",
    MinimizeKey = Enum.KeyCode.RightControl
})

local Tab = Window:AddTab({ Title = "Main", Icon = "home" })

local replicatedStorage = game:GetService("ReplicatedStorage")
local collectionService = game:GetService("CollectionService")
local players = game:GetService("Players")
local localPlayer = players.LocalPlayer

local eggModels = {}
local eggPets = {}
local espEnabled = false
local espCache = {}
local activeEggs = {}
local addedConn, removedConn

local MIN_EGG_PETS_ENTRIES = 1 -- adjust this value if needed

-- Screen Status GUI
local function createStatusGui()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "EggESP_StatusGui"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = game:GetService("CoreGui")

    local Frame = Instance.new("Frame")
    Frame.Parent = ScreenGui
    Frame.AnchorPoint = Vector2.new(0, 0)
    Frame.Position = UDim2.new(0, 10, 0, 10)
    Frame.Size = UDim2.new(0, 350, 0, 50)
    Frame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
    Frame.BackgroundTransparency = 0.3
    Frame.BorderSizePixel = 0

    local TextLabel = Instance.new("TextLabel")
    TextLabel.Parent = Frame
    TextLabel.Size = UDim2.new(1, 0, 1, 0)
    TextLabel.BackgroundTransparency = 1
    TextLabel.TextColor3 = Color3.new(1, 1, 1)
    TextLabel.TextScaled = true
    TextLabel.Font = Enum.Font.SourceSansBold
    TextLabel.Text = "Starting EggESP..."

    return TextLabel
end

local statusLabel = createStatusGui()

-- AutoHop function
local function AutoHop()
    statusLabel.Text = "üöÄ Hopping to next server..."
    print("üöÄ Hopping to next server...")
    loadstring(game:HttpGet("https://raw.githubusercontent.com/typical-overseer/roblox-server-hop/main/serverhop.lua"))()
end

-- Main test function
local function testEggPets()
    statusLabel.Text = "üîç Testing eggPets..."
    local success = pcall(function()
        local hatchFunc = getupvalue(getupvalue(getconnections(replicatedStorage.GameEvents.PetEggService.OnClientEvent)[1].Function, 1), 2)
        eggModels = getupvalue(hatchFunc, 1) or {}
        eggPets = getupvalue(hatchFunc, 2) or {}
    end)

    if not success then
        print("‚ùå Could not access eggPets - possibly patched.")
        statusLabel.Text = "‚ùå eggPets access failed ‚Üí hopping..."
        AutoHop()
        return false
    end

    if type(eggPets) == "table" then
        local count = 0
        for k, v in pairs(eggPets) do count = count + 1 end
        print("‚úÖ eggPets detected! Entries: " .. count)
        if count >= MIN_EGG_PETS_ENTRIES then
            print("üéâ GOOD SERVER FOUND!")
            statusLabel.Text = "üéâ GOOD SERVER FOUND! eggPets Entries: " .. count
            return true
        else
            print("‚ö†Ô∏è eggPets present but empty ‚Üí hopping...")
            statusLabel.Text = "‚ö†Ô∏è eggPets EMPTY ‚Üí hopping..."
            AutoHop()
            return false
        end
    else
        print("‚ùå eggPets not detected ‚Üí hopping...")
        statusLabel.Text = "‚ùå eggPets not detected ‚Üí hopping..."
        AutoHop()
        return false
    end
end

-- ESP Core
local function getObjectFromId(objectId)
    for _, eggModel in pairs(eggModels) do
        if eggModel:GetAttribute("OBJECT_UUID") == objectId then
            return eggModel
        end
    end
end

local function CreateEspGui(object, text)
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PetEggDetectorESP"
    billboard.Adornee = object:FindFirstChildWhichIsA("BasePart") or object.PrimaryPart or object
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 2.5, 0)
    billboard.AlwaysOnTop = true

    local label = Instance.new("TextLabel")
    label.Parent = billboard
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextStrokeTransparency = 0
    label.TextScaled = true
    label.Font = Enum.Font.SourceSansBold

    billboard.Parent = object
    return billboard
end

local function UpdateEsp(objectId, petName)
    local object = getObjectFromId(objectId)
    if not object or not espCache[objectId] then return end

    local eggName = object:GetAttribute("EggName") or "Unknown"
    local labelGui = espCache[objectId]
    if labelGui and labelGui:FindFirstChildOfClass("TextLabel") then
        labelGui.TextLabel.Text = eggName .. " | " .. (petName or "?")
    end
end

local function AddEsp(object)
    if object:GetAttribute("OWNER") ~= localPlayer.Name then return end
    local eggName = object:GetAttribute("EggName") or "Unknown"
    local petName = eggPets[object:GetAttribute("OBJECT_UUID")]
    local objectId = object:GetAttribute("OBJECT_UUID")
    if not objectId then return end

    local text = eggName .. " | " .. (petName or "?")
    local esp = CreateEspGui(object, text)
    espCache[objectId] = esp
    activeEggs[objectId] = object
end

local function RemoveEsp(object)
    if object:GetAttribute("OWNER") ~= localPlayer.Name then return end
    local objectId = object:GetAttribute("OBJECT_UUID")
    if espCache[objectId] then
        espCache[objectId]:Destroy()
        espCache[objectId] = nil
    end
    activeEggs[objectId] = nil
end

-- GUI Toggle
if Tab and Tab.AddToggle then
    Tab:AddToggle("PetEggDetectESP", {
        Title = "Pet Hatch Detector",
        Description = "eggs need to be ready, then server hop until you got the pet you want.",
        Default = false
    }):OnChanged(function(state)
        espEnabled = state

        if espEnabled then
            local goodServer = testEggPets()

            for _, object in collectionService:GetTagged("PetEggServer") do
                task.spawn(AddEsp, object)
            end

            addedConn = collectionService:GetInstanceAddedSignal("PetEggServer"):Connect(AddEsp)
            removedConn = collectionService:GetInstanceRemovedSignal("PetEggServer"):Connect(RemoveEsp)

            pcall(function()
                local conn = getconnections(replicatedStorage.GameEvents.EggReadyToHatch_RE.OnClientEvent)[1]
                if conn and typeof(conn.Function) == "function" then
                    hookfunction(conn.Function, newcclosure(function(objectId, petName)
                        UpdateEsp(objectId, petName)
                    end))
                end
            end)
        else
            for _, gui in pairs(espCache) do
                gui:Destroy()
            end
            espCache = {}
            activeEggs = {}

            if addedConn then addedConn:Disconnect() addedConn = nil end
            if removedConn then removedConn:Disconnect() removedConn = nil end

            statusLabel.Text = "ESP Disabled."
        end
    end)
else
    warn("Xeno user detected?")
end
